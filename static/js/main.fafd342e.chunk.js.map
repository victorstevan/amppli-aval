{"version":3,"sources":["etc/grid_locale.js","state/Store.jsx","presentation/components/EditForm.jsx","presentation/components/ViewData.jsx","presentation/components/DataTable.jsx","presentation/components/DataForm.jsx","presentation/components/ModalForm.jsx","presentation/components/DownloadExcel.jsx","presentation/components/Header.jsx","presentation/components/SideMenu.jsx","presentation/pages/app-root/App.js","reportWebVitals.js","index.js"],"names":["grid_locale","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarExport","toolbarExportLabel","toolbarExportCSV","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","toLocaleString","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","booleanCellTrueLabel","booleanCellFalseLabel","MuiTablePagination","initialState","Context","React","createContext","Store","children","useState","state","setState","Provider","value","getModalStyle","top","left","transform","display","flexDirection","alignItems","justifyContent","width","height","useStyles","makeStyles","theme","paper","position","overflow","rowGap","borderRadius","paddingTop","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","EditForm","handleClose","item","classes","modalStyle","useContext","useForm","register","handleSubmit","onSubmit","data","items","item1","style","className","marginTop","textAlign","color","fontWeight","Grid","paddingLeft","paddingRight","container","xs","TextField","id","type","defaultValue","name","size","label","variant","InputLabelProps","shrink","cpf_cnpj","required","inscricao_estadual","razao_social","fullWidth","cep","rua","numero","complemento","bairro","email","fone_1","fone_2","fone_3","fone_4","STATUS","observacao","multiline","rows","columnGap","Button","onClick","ViewData","ESTADO","CIDADE","CustomToolbar","DataTable","selectedRow","setRowState","viewItem","setViewItem","editItem","setEditItem","handleDelete","filter","edit","setEdit","open","setOpen","handleOpen","selectedView","console","log","handleEdit","selectedEdit","handleFinishedEditing","columns","field","headerName","renderCell","params","IconButton","marginLeft","icon","faTrash","faEdit","faEye","checkboxSelection","onRowSelected","row","components","Toolbar","localeText","Modal","onClose","DataForm","setCep","estado","cidade","address","setAddress","searchLocCode","a","fetch","json","webData","loadedAddress","logradouro","localidade","uf","content","newItem","onChange","e","target","InputProps","endAdornment","InputAdornment","faSearch","window","confirm","Dialog","ModalForm","faPlus","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Download","element","faFileExcel","StyledHeader","styled","header","CustomButton","div","Header","marginRight","faBars","faTools","faUser","StyledSideMenu","SideMenu","faHome","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fafd342e.chunk.js","sourcesContent":["\r\n\r\nexport const grid_locale = {\r\n    // Root\r\n    noRowsLabel: 'Sem linhas',\r\n    noResultsOverlayLabel: 'Nenhum resultado.',\r\n    errorOverlayDefaultLabel: 'Erro inesperado.',\r\n  \r\n    // Density selector toolbar button text\r\n    toolbarDensity: 'Densidade',\r\n    toolbarDensityLabel: 'Densidade',\r\n    toolbarDensityCompact: 'Compacto',\r\n    toolbarDensityStandard: 'Padrão',\r\n    toolbarDensityComfortable: 'Confortável',\r\n  \r\n    // Columns selector toolbar button text\r\n    toolbarColumns: 'Colunas',\r\n    toolbarColumnsLabel: 'Selecionar coluna',\r\n  \r\n    // Filters toolbar button text\r\n    toolbarFilters: 'Filtros',\r\n    toolbarFiltersLabel: 'Mostrar filtros',\r\n    toolbarFiltersTooltipHide: 'Esconder filtros',\r\n    toolbarFiltersTooltipShow: 'Mostrar filtros',\r\n    toolbarFiltersTooltipActive: (count) =>\r\n      count !== 1 ? `${count} filtros ativos` : `${count} filtro ativo`,\r\n  \r\n    // Export selector toolbar button text\r\n    toolbarExport: 'Exportar',\r\n    toolbarExportLabel: 'Exportar',\r\n    toolbarExportCSV: 'Baixar como CSV',\r\n  \r\n    // Columns panel text\r\n    columnsPanelTextFieldLabel: 'Achar colunar',\r\n    columnsPanelTextFieldPlaceholder: 'Titulo da coluna',\r\n    columnsPanelDragIconLabel: 'Reordenar coluna',\r\n    columnsPanelShowAllButton: 'Mostrar tudo',\r\n    columnsPanelHideAllButton: 'Esconder tudo',\r\n  \r\n    // Filter panel text\r\n    filterPanelAddFilter: 'Adicionar filtro',\r\n    filterPanelDeleteIconLabel: 'Deletar',\r\n    filterPanelOperators: 'Operadores',\r\n    filterPanelOperatorAnd: 'e',\r\n    filterPanelOperatorOr: 'Ou',\r\n    filterPanelColumns: 'Colunas',\r\n    filterPanelInputLabel: 'Valor',\r\n    filterPanelInputPlaceholder: 'Filtrar valor',\r\n  \r\n    // Filter operators text\r\n    filterOperatorContains: 'contem',\r\n    filterOperatorEquals: 'igual',\r\n    filterOperatorStartsWith: 'começa com',\r\n    filterOperatorEndsWith: 'termina com',\r\n    filterOperatorIs: 'é',\r\n    filterOperatorNot: 'não é',\r\n    filterOperatorAfter: 'depois de',\r\n    filterOperatorOnOrAfter: 'entre ou depois de',\r\n    filterOperatorBefore: 'é antes',\r\n    filterOperatorOnOrBefore: 'entre ou antes',\r\n    filterOperatorIsEmpty: 'é vazio',\r\n    filterOperatorIsNotEmpty: 'não é vazio',\r\n  \r\n    // Filter values text\r\n    filterValueAny: 'qualquer',\r\n    filterValueTrue: 'verdadeiro',\r\n    filterValueFalse: 'falso',\r\n  \r\n    // Column menu text\r\n    columnMenuLabel: 'Menu',\r\n    columnMenuShowColumns: 'Mostrar colunas',\r\n    columnMenuFilter: 'Filtrar',\r\n    columnMenuHideColumn: 'Esconder',\r\n    columnMenuUnsort: 'Remover ordenação',\r\n    columnMenuSortAsc: 'Ordem crescente',\r\n    columnMenuSortDesc: 'Ordem descrescente',\r\n  \r\n    // Column header text\r\n    columnHeaderFiltersTooltipActive: (count) =>\r\n      count !== 1 ? `${count} filtros ativos` : `${count} filtro ativo`,\r\n    columnHeaderFiltersLabel: 'Mostrar filtros',\r\n    columnHeaderSortIconLabel: 'Ordenar',\r\n  \r\n    // Rows selected footer text\r\n    footerRowSelected: (count) =>\r\n      count !== 1\r\n        ? `${count.toLocaleString()} Colunas selecionadas`\r\n        : `${count.toLocaleString()} Linhas selecionadas`,\r\n  \r\n    // Total rows footer text\r\n    footerTotalRows: 'Linhas totais:',\r\n  \r\n    // Total visible rows footer text\r\n    footerTotalVisibleRows: (visibleCount, totalCount) =>\r\n      `${visibleCount.toLocaleString()} de ${totalCount.toLocaleString()}`,\r\n  \r\n    // Checkbox selection text\r\n    checkboxSelectionHeaderName: 'Caixas seleção marcadas',\r\n  \r\n    // Boolean cell text\r\n    booleanCellTrueLabel: 'verdadeiro',\r\n    booleanCellFalseLabel: 'falso',\r\n  \r\n    // Used core components translation keys\r\n    MuiTablePagination: {},\r\n};","\r\n\r\nimport React, { useState } from 'react'\r\n\r\n\r\nconst initialState = [{\r\n  \"id\": \"2\",\r\n  \"cpf_cnpj\": \"071.871.611-66\",\r\n  \"inscricao_estadual\": \"inscr\",\r\n  \"razao_social\": \"Razão\",\r\n  \"NOME FANTASIA\": \"Starly\",\r\n  \"cep\": 74640040,\r\n  \"rua\": \"Rua 1\",\r\n  \"numero\": 240,\r\n  \"complemento\": \"Lugar\",\r\n  \"bairro\": \"Vila\",\r\n  \"ESTADO\": \"Goiás\",\r\n  \"CIDADE\": \"Goiânia\",\r\n  \"email\": \"victor.stevan@email.com\",\r\n  \"fone_1\": \"62982858137\",\r\n  \"fone_2\": \"62982858137\",\r\n  \"fone_3\": \"62982858137\",\r\n  \"fone_4\": \"62982858137\",\r\n  \"DAT CADASTRO\": \"02/02/1999\",\r\n  \"STATUS\": \"Ativo\",\r\n  \"observacao\": \"Nenhuma\",\r\n}];\r\n\r\nexport const Context = React.createContext();\r\n\r\nconst Store = ({ children }) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  return (\r\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\r\n  );\r\n}\r\nexport default Store;","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Context } from '../../state/Store';\r\n\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n\r\n  return {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '75%',\r\n    height: '75%',\r\n\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    overflow: 'scroll',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    rowGap: '20px',\r\n    borderRadius: '16px',\r\n    paddingTop: '120px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 0, 1),\r\n\r\n  },\r\n}));\r\n\r\nexport const EditForm = ({ handleClose, item }) => {\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n  const [state, setState] = useContext(Context);\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n  const onSubmit = (data) => {\r\n\r\n\r\n    let items = [...state];\r\n    let item1 = {...items[0]}\r\n\r\n    \r\n    item1 = data;\r\n\r\n    items[0] = item1;\r\n\r\n    setState(items)\r\n   \r\n\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} style={modalStyle} className={classes.paper}>\r\n      <div style={{ backgroundColor: '#0e478c', width: '100%', marginTop: '-100px', padding: '0', textAlign: 'center', color: 'white' }}><h1 style={{ fontWeight: 'lighter' }}>Atualizar Cliente</h1></div>\r\n      <Grid style={{ paddingLeft: '50px', paddingRight: '50px', rowGap: '10px', display: 'flex', flexDirection: 'column' }}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs>\r\n            <TextField {...register('id', {value: item.id})} type=\"number\" defaultValue={item.id} name=\"id\" size=\"small\" width={30} label=\"ID\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField name=\"cpf/cnpf\" {...register('cpf_cnpj')} defaultValue={item.cpf_cnpj} size=\"small\" label=\"CPF/CNPJ\" required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('inscricao_estadual')}  defaultValue={item.inscricao_estadual} label=\"Inscrição Estadual\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('razao_social')} defaultValue={item.razao_social}  label=\"Razão Social\" required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid xs item>\r\n            <TextField size=\"small\" fullWidth {...register('NOME FANTASIA')} defaultValue={item['NOME FANTASIA']} label=\"Nome Fantasia\" required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('cep')} label=\"CEP\" defaultValue={item.cep}  variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField fullWidth {...register('rua')} size=\"small\" defaultValue={item.rua}  label=\"Rua\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField size=\"small\" {...register('numero')} label=\"Número\" defaultValue={item.numero}  variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('complemento')} label=\"Complemento\" defaultValue={item.complemento}  variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n\r\n          <Grid item xs={6}>\r\n            <TextField fullWidth size=\"small\" {...register('bairro')} label=\"Bairro\" defaultValue={item.bairro}   variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField fullWidth size=\"small\" {...register('CIDADE', {defaultValue: 'Teste'})} label=\"Estado\" defaultValue={item['CIDADE']}  variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField fullWidth size=\"small\" {...register('ESTADO')} label=\"Cidade\" defaultValue={item['ESTADO']}  variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n\r\n        </Grid>\r\n        <Grid container spacing={5}>\r\n          <Grid item xs={4}>\r\n            <TextField fullWidth size=\"small\"  {...register('email')} label=\"E-mail\" defaultValue={item.email}  variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('fone_1')} label=\"Fone 1\" defaultValue={item.fone_1}  variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('fone_2')} label=\"Fone 2\" defaultValue={item.fone_2} variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('fone_3')} label=\"Fone 3\" defaultValue={item.fone_3} variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('fone_4')} label=\"Fone 4\" defaultValue={item.fone_4} variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{justifyContent: 'center'}} container spacing={2}>\r\n          <Grid item >\r\n            <TextField size=\"small\"  {...register('DAT CADASTRO')} defaultValue={item['DAT CADASTRO']} label=\"Data de Cadastro\" required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item >\r\n            <TextField size=\"small\" {...register('STATUS')} label=\"Status\" defaultValue={item.STATUS} required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs>\r\n            <TextField fullWidth {...register('observacao')} label=\"Observação\" variant=\"outlined\" defaultValue={item.observacao} multiline rows={5} InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <div style={{ display: 'flex', columnGap: '40px' }}>\r\n        <Button onClick={handleClose} type=\"abort\" color=\"primary\" variant=\"contained\">\r\n          Voltar\r\n        </Button>\r\n        <Button type=\"submit\" style={{ backgroundColor: '#007F00', color: \"white\" }} variant=\"contained\">\r\n          Salvar\r\n        </Button>\r\n        <Button style={{ backgroundColor: '#C13437', color: \"white\" }} variant=\"contained\">\r\n          Cancelar\r\n        </Button>\r\n      </div>\r\n\r\n    </form>\r\n  )\r\n}\r\n","\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nfunction getModalStyle() {\r\n\r\n  return {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    display: 'flex',\r\n    overflow: 'scroll',\r\n    flexDirection: 'row',\r\n    columnGap: '30px',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '75%',\r\n    height: '75%',\r\n\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n\r\n    position: 'absolute',\r\n    width: 400,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n    rowGap: '20px',\r\n    borderRadius: '16px',\r\n\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 0, 1),\r\n\r\n  },\r\n}));\r\n\r\nexport const ViewData = ({ data }) => {\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n\r\n  return (\r\n    <form style={modalStyle} className={classes.paper}>\r\n\r\n      <div>\r\n        <p><strong>Informações Pessoais</strong></p>\r\n        <p>ID: {data.id}</p>\r\n        <p>CPF/CNPJ: {data.cpf_cnpj}</p>\r\n        <p>Inscrição Estadual: {data.inscricao_estadual}</p>\r\n        <p>Razão Social: {data.razao_social}</p>\r\n        <p>Nome Fantasia: {data[\"NOME FANTASIA\"]}</p>\r\n      </div>\r\n      <div>\r\n        <p>CEP: {data.cep}</p>\r\n        <p>Rua: {data.rua}</p>\r\n        <p>Numero: {data.numero}</p>\r\n        <p>Complemento: {data.complemento}</p>\r\n        <p>Bairro: {data.bairro}</p>\r\n        <p>Estado: {data.ESTADO}</p>\r\n        <p>Cidade: {data.CIDADE}</p>\r\n      </div>\r\n      <div>\r\n        <p>Email: {data.email}</p>\r\n        <p>Fone 1: {data.fone_1}</p>\r\n        <p>Fone 2: {data.fone_2}</p>\r\n        <p>Fone 3: {data.fone_3}</p>\r\n        <p>Fone 4: {data.fone_4}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <p>Data de Cadastro: {data[\"DAT CADASTRO\"]}</p>\r\n        <p>Status: {data.STATUS}</p>\r\n        <p>Observação: {data.observacao}</p>\r\n      </div>\r\n\r\n    </form>\r\n  )\r\n}\r\n","import { faEdit, faEye, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconButton, Modal } from '@material-ui/core';\r\nimport { DataGrid, GridToolbarColumnsButton, GridToolbarContainer, GridToolbarDensitySelector, GridToolbarFilterButton } from '@material-ui/data-grid'\r\nimport React, { useContext, useState } from 'react'\r\nimport { grid_locale } from '../../etc/grid_locale';\r\nimport { Context } from '../../state/Store';\r\nimport { EditForm } from './EditForm';\r\nimport { ViewData } from './ViewData';\r\n\r\n\r\n\r\n\r\nconst CustomToolbar = () => {\r\n  return (\r\n    <GridToolbarContainer>\r\n      <GridToolbarFilterButton />\r\n      <GridToolbarColumnsButton />\r\n      <GridToolbarDensitySelector />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const DataTable = () => {\r\n\r\n  const [state, setState] = useContext(Context);\r\n  const [selectedRow, setRowState] = useState({ data: { id: \"\" } });\r\n  const [viewItem, setViewItem] = useState({ data: { id: \"\" } });\r\n  const [editItem, setEditItem] = useState({ data: { id: \"\" } });\r\n\r\n  const handleDelete = () => {\r\n    if (selectedRow !== {}) {\r\n      setState(state.filter(item => { return item.id !== selectedRow.data.id }))\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const [edit, setEdit] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    const selectedView = selectedRow.data;\r\n    setViewItem(selectedView)\r\n    setOpen(true);\r\n    console.log(selectedView)\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    const selectedEdit = selectedRow.data;\r\n    setEditItem(selectedEdit)\r\n    setEdit(true)\r\n  }\r\n\r\n  const handleFinishedEditing = () => {\r\n    setEdit(false)\r\n  }\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      field: \"buttons\", headerName: \"  \", width: 150, renderCell: (params) => (\r\n        <strong>\r\n\r\n          <IconButton\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            style={{ marginLeft: 16 }}\r\n            onClick={handleDelete}\r\n\r\n          >\r\n\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </IconButton>\r\n          <IconButton\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            style={{ marginLeft: 16 }}\r\n            onClick={handleEdit}\r\n\r\n\r\n          >\r\n\r\n            <FontAwesomeIcon icon={faEdit} />\r\n          </IconButton>\r\n          <IconButton\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            style={{ marginLeft: 16 }}\r\n            onClick={handleOpen}\r\n          >\r\n\r\n            <FontAwesomeIcon icon={faEye} />\r\n          </IconButton>\r\n\r\n        </strong>\r\n      )\r\n    },\r\n    {\r\n\r\n      field: \"id\", headerName: \"ID\", width: 100, checkboxSelection: true\r\n    },\r\n    { field: \"NOME FANTASIA\", headerName: \"Nome Fantasia\", width: 200 },\r\n    { field: \"ESTADO\", headerName: \"Estado\", width: 150 },\r\n    { field: \"CIDADE\", headerName: \"Cidade\", width: 150 },\r\n    { field: \"DAT CADASTRO\", headerName: \"Data de Cadastro\", width: 200 },\r\n    { field: \"STATUS\", headerName: \"Status\", width: 150 },\r\n\r\n  ];\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"main-table\">\r\n      <div\r\n        className=\"container bg-white\"\r\n        style={{ height: 400, width: \"calc(100% - 130px)\", paddingLeft: '120px', marginTop: '30px' }}\r\n      >\r\n        <DataGrid onRowSelected={(row) => setRowState(row)} rows={state} columns={columns} components={{ Toolbar: CustomToolbar, }} localeText={grid_locale} />\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <div>\r\n\r\n            <ViewData handleClose={handleClose} data={viewItem}></ViewData>\r\n\r\n          </div>\r\n        </Modal>\r\n        <Modal\r\n          open={edit}\r\n          onClose={handleFinishedEditing}\r\n        >\r\n          <div>\r\n         \r\n            <EditForm handleClose={handleFinishedEditing} item={editItem}></EditForm>\r\n\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Button, Dialog, Grid, TextField, IconButton, InputAdornment } from '@material-ui/core';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Context } from '../../state/Store';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n\r\n  return {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '75%',\r\n    height: '75%',\r\n\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n\r\n    position: 'absolute',\r\n    width: 400,\r\n    overflow: 'scroll',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    rowGap: '20px',\r\n    borderRadius: '16px',\r\n    paddingTop: '120px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 0, 1),\r\n\r\n  },\r\n}));\r\n\r\nexport const DataForm = ({ handleClose }) => {\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n  const [state, setState] = useContext(Context);\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n\r\n  const [cep, setCep] = useState('');\r\n\r\n\r\n  const [address, setAddress] = useState(\r\n    {\r\n      rua: '',\r\n      complemento: '',\r\n      bairro: '',\r\n      estado: '',\r\n      cidade: '',\r\n    }\r\n  );\r\n\r\n  const searchLocCode = async (cep)  => {\r\n    const webData = await (await fetch('http://viacep.com.br/ws/'+ cep +'/json/')).json();\r\n    \r\n    const loadedAddress = {\r\n      rua: webData.logradouro,\r\n      complemento: webData.complemento,\r\n      cidade: webData.localidade,\r\n      estado: webData.uf,\r\n      bairro: webData.bairro,\r\n\r\n    };\r\n\r\n    setAddress(loadedAddress);\r\n\r\n    console.log(loadedAddress);\r\n\r\n\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    const newItem = data;\r\n    setState([...state, newItem]);\r\n    handleClose()\r\n\r\n  }\r\n\r\n  const handleInputChange = (e) =>{\r\n    console.log('hey');\r\n  }\r\n\r\n\r\n\r\n  const [content, setContent] = useState({});\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  return (\r\n    <form content={content} onSubmit={handleSubmit(onSubmit)} style={modalStyle} className={classes.paper}>\r\n      <div style={{ backgroundColor: '#0e478c', width: '100%', marginTop: '-100px', padding: '0', textAlign: 'center', color: 'white' }}><h1 style={{ fontWeight: 'lighter' }}>CADASTRO CLIENTE</h1></div>\r\n      <Grid style={{ paddingLeft: '50px', paddingRight: '50px', rowGap: '10px', display: 'flex', flexDirection: 'column' }}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs>\r\n            <TextField {...register('id')} type=\"number\" name=\"id\" size=\"small\" width={30} label=\"ID\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField name=\"cpf/cnpf\" {...register('cpf_cnpj', { required: true })} size=\"small\" label=\"CPF/CNPJ\" required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('inscricao_estadual')} label=\"Inscrição Estadual\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('razao_social', { required: true })} label=\"Razão Social\" required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid xs item>\r\n            <TextField size=\"small\" fullWidth {...register('NOME FANTASIA', { required: true })} label=\"Nome Fantasia\" required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={3}>\r\n            <TextField size=\"small\" {...register('cep')} onChange={(e) => setCep(e.target.value)} InputProps={{\r\n              endAdornment: <InputAdornment position=\"start\">\r\n                <IconButton onClick={(e) => searchLocCode(cep)}>\r\n                  <FontAwesomeIcon size=\"xs\" icon={faSearch}></FontAwesomeIcon>\r\n                </IconButton>\r\n              </InputAdornment>,\r\n            }} label=\"CEP\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField fullWidth {...register('rua', {value: address.estado})} size=\"small\" value={address.rua} label=\"Rua\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField size=\"small\" {...register('numero')} label=\"Número\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('complemento',  {value: address.complemento})} value={address.complemento}  label=\"Complemento\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n\r\n          <Grid item xs={6}>\r\n            <TextField fullWidth size=\"small\" {...register('bairro' , {value: address.bairro})} value={address.bairro}  label=\"Bairro\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField fullWidth size=\"small\" {...register('ESTADO', {value: address.estado})} value={address.estado}  label=\"Estado\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField fullWidth size=\"small\" {...register('CIDADE', {value: address.cidade})} value={address.cidade}  label=\"Cidade\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n\r\n        </Grid>\r\n        <Grid container spacing={5}>\r\n          <Grid item xs={4}>\r\n            <TextField fullWidth size=\"small\"  {...register('email')} label=\"E-mail\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('fone_1')} label=\"Fone 1\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('fone_2')} label=\"Fone 2\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('fone_3')} label=\"Fone 3\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField size=\"small\" {...register('fone_4')} label=\"Fone 4\" variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{ justifyContent: 'center' }} container spacing={2}>\r\n          <Grid item >\r\n            <TextField size=\"small\" type=\"date\" {...register('DAT CADASTRO', { required: true })} label=\"Data de Cadastro\" required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n          <Grid item >\r\n            <TextField size=\"small\" {...register('STATUS', { required: true })} label=\"Status\" required variant=\"outlined\" InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs>\r\n            <TextField fullWidth {...register('observacao')} label=\"Observação\" variant=\"outlined\" multiline rows={5} InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <div style={{ display: 'flex', columnGap: '40px' }}>\r\n        <Button onClick={(e) => window.confirm(\"Tem certeza?\") ? handleClose() : null} type=\"abort\" color=\"primary\" variant=\"contained\">\r\n          Voltar\r\n        </Button>\r\n        <Button type=\"submit\" style={{ backgroundColor: '#007F00', color: \"white\" }} variant=\"contained\">\r\n          Salvar\r\n        </Button>\r\n        <Button onClick={(e) => window.confirm(\"Tem certeza?\") ? handleClose() : null} style={{ backgroundColor: '#C13437', color: \"white\" }} variant=\"contained\">\r\n          Cancelar\r\n        </Button>\r\n\r\n      </div>\r\n      <Dialog open={open} onClose={handleClose} />\r\n\r\n\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { DataForm } from './DataForm';\r\n\r\n\r\n\r\n\r\n\r\nexport const ModalForm = () => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n \r\n  return (\r\n    \r\n    <div>\r\n   \r\n    \r\n      <IconButton onClick={handleOpen}>\r\n        <FontAwesomeIcon icon={faPlus} color='white' />\r\n      </IconButton>\r\n      <Modal\r\n \r\n        open={open}\r\n        onClose={handleClose}\r\n\r\n      >\r\n        <div><DataForm handleClose={handleClose} /></div>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport React, {useContext} from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport { Context } from \"../../state/Store\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n\r\nexport const Download = () => {\r\n\r\n  const [state, setState] = useContext(Context);\r\n\r\n  return (\r\n    <ExcelFile element={<IconButton>\r\n      <FontAwesomeIcon icon={faFileExcel} color='white' />\r\n    </IconButton>}>\r\n      <ExcelSheet  data={state} name=\"Employees\">\r\n        <ExcelColumn label=\"ID\" value=\"id\" />\r\n        <ExcelColumn label=\"CPF/CNPJ\" value=\"cpf_cnpj\" />\r\n        <ExcelColumn label=\"Inscriação Estadual\" value=\"inscricao_estadual\" />\r\n        <ExcelColumn label=\"Razão Social\" value=\"razao_social\" />\r\n        <ExcelColumn label=\"Nome Fantasia\" value=\"NOME FANTASIA\" />\r\n        <ExcelColumn label=\"CEP\" value=\"cep\" />\r\n        <ExcelColumn label=\"Rua\" value=\"rua\" />\r\n        <ExcelColumn label=\"Número\" value=\"numero\" />\r\n        <ExcelColumn label=\"Complemento\" value=\"complemento\" />\r\n        <ExcelColumn label=\"Bairro\" value=\"bairro\" />\r\n        <ExcelColumn label=\"Estado\" value=\"ESTADO\" />\r\n        <ExcelColumn label=\"Cidade\" value=\"CIDADE\" />\r\n        <ExcelColumn label=\"E-mail\" value=\"email\" />\r\n        <ExcelColumn label=\"Fone 1\" value=\"fone_1\" />\r\n        <ExcelColumn label=\"Fone 2\" value=\"fone_2\" />\r\n        <ExcelColumn label=\"Fone 3\" value=\"fone_3\" />\r\n        <ExcelColumn label=\"Fone 4\" value=\"fone_4\" />\r\n        <ExcelColumn label=\"Data de Cadastro\" value=\"DAT CADASTRO\" />\r\n        <ExcelColumn label=\"Status\" value=\"STATUS\" />\r\n        <ExcelColumn label=\"Observação\" value=\"observacao\" />\r\n\r\n\r\n\r\n\r\n        \r\n      </ExcelSheet>\r\n\r\n    </ExcelFile>\r\n  );\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { faBars, faTools, faPlus, faFileExcel, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, { useContext } from 'react'\r\nimport styled, { ThemeProvider } from 'styled-components'\r\nimport { ModalForm } from './ModalForm';\r\nimport {Download }from './DownloadExcel';\r\nimport { Context } from '../../state/Store';\r\n\r\n\r\nconst StyledHeader = styled.header`\r\nheight: 60px;\r\nwidth: 100%;\r\nbackground-color: #0e478c;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: start;\r\npadding-left: 10px;\r\npadding-right: 10px;\r\nflex: 1;\r\n`;\r\n\r\n\r\n\r\nconst CustomButton = styled.div`\r\nmargin-top: 20px;\r\njustify-self: center;\r\nwidth: 70px;\r\nheight: 70px;\r\nbackground-color: #fec51b;\r\nborder: 0px;\r\nmargin-right: 10px;\r\ndisplay: flex;\r\njustify-content: center;\r\n`;\r\n\r\n\r\nexport const Header = ({onClick, content}) => {\r\n\r\n\r\n\r\n  return (\r\n\r\n    <StyledHeader>\r\n\r\n      <IconButton style={{ marginRight: '50px' }} >\r\n        <FontAwesomeIcon icon={faBars} color='white' />\r\n      </IconButton>\r\n\r\n\r\n      <CustomButton>\r\n        <IconButton style={{ backgroundColor: 'transparent' }} >\r\n          <FontAwesomeIcon icon={faTools} color='white' />\r\n        </IconButton>\r\n      </CustomButton>\r\n      <ModalForm onClick={onClick} content={content}/>\r\n      \r\n      <Download></Download>\r\n\r\n\r\n\r\n      <IconButton style={{ marginLeft: 'auto', marginRight: '30px', backgroundColor: 'white'}}>\r\n        <FontAwesomeIcon icon={faUser} color='#0e478c' />\r\n      </IconButton>\r\n\r\n    </StyledHeader>\r\n\r\n\r\n  )\r\n}\r\n","import { faHome, faTools } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconButton } from '@material-ui/core';\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\n\r\nconst StyledSideMenu = styled.div`\r\nbackground-color: #D2D3D5;\r\nwidth: 80px;\r\nheight: calc(100% - 80px);\r\nposition:absolute;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;\r\nalign-items: center;\r\npadding-top: 10px;\r\npadding-bottom: 10px; \r\n`;\r\n\r\n\r\nexport const SideMenu = () => {\r\n  return (\r\n    <StyledSideMenu>\r\n      <IconButton  style={{backgroundColor: '#fec51b', }}>\r\n      <FontAwesomeIcon  icon={faTools} color='white' />\r\n      </IconButton>\r\n      <IconButton style={{backgroundColor: '#0e478c'}}>\r\n      <FontAwesomeIcon icon={faHome} color='white' />\r\n      </IconButton>\r\n    </StyledSideMenu>\r\n  )\r\n}\r\n","import { DataTable } from \"../../components/DataTable\";\nimport { Header } from \"../../components/Header\";\nimport { ModalForm } from \"../../components/ModalForm\";\nimport { SideMenu } from \"../../components/SideMenu\";\nimport React, { useState, useContext } from 'react';\nimport Store, { Context } from \"../../../state/Store\";\nimport firebase from \"firebase\";\nimport 'firebase/firestore';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport Download from \"../../components/DownloadExcel\";\n\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB7AgjgengXz4XV3udEAmbekFuCiE6k0PM\",\n  authDomain: \"amppli.firebaseapp.com\",\n  projectId: \"amppli\",\n  storageBucket: \"amppli.appspot.com\",\n  messagingSenderId: \"352036860454\",\n  appId: \"1:352036860454:web:acc6dafd6074ac93df6ce7\",\n  measurementId: \"G-VP4MJY8CFS\"\n});\n\nconst firestore = firebase.firestore();\n\n\nconst App = ()  =>  {\n\n  \n\n\n  return (\n    <Store >\n      \n      <Header />\n      <SideMenu />\n      <DataTable />\n\n    </Store>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './presentation/pages/app-root/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}